{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBv5DscSinsnOHZloc_wkvORqqJCfpdIY0\",\n  authDomain: \"oddamwdobrerece-2e8cb.firebaseapp.com\",\n  projectId: \"oddamwdobrerece-2e8cb\",\n  storageBucket: \"oddamwdobrerece-2e8cb.appspot.com\",\n  messagingSenderId: \"402538213194\",\n  appId: \"1:402538213194:web:d26e8a35876fe3ff8e1bb3\",\n  measurementId: \"G-K3772P97JK\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`); // const collectionRef = firestore.collection(\"users\");\n\n  const snapshot = await userRef.get(); // const collectionSnapshot = await collectionRef.get();\n  // console.log({ collection: collectionSnapshot.docs.map((doc) => doc.data()) });\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n}; // pobieranie uzytkowników\n\nexport const getUsers = collection => {\n  const transformCollecion = collection.docs.map(doc => {\n    const {\n      displayName,\n      email,\n      createdAt\n    } = doc.data();\n    return {\n      id: doc.id,\n      displayName,\n      email,\n      createdAt // console.log(\"\");\n\n    };\n  }); // console.log(transformCollecion);\n\n  return transformCollecion;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport default firebase;","map":{"version":3,"sources":["/home/krystian/CodersLab_JavaScript_Brudnopis/OddamRzeczyWDobreRece/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","getUsers","collection","transformCollecion","docs","map","data","id","initializeApp","auth"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,uCAFD;AAGXC,EAAAA,SAAS,EAAE,uBAHA;AAIXC,EAAAA,aAAa,EAAE,mCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAI,CAACD,QAAL,EAAe;AACZ,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB,CAFyE,CAG5E;;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAL4E,CAM5E;AACA;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACrB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMV,OAAO,CAACW,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGV;AAJc,OAAZ,CAAN;AAMA,KAPD,CAOE,OAAOa,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACA;AACD;;AAED,SAAOf,OAAP;AACA,CA1BM,C,CA4BP;;AAEA,OAAO,MAAMgB,QAAQ,GAAIC,UAAD,IAAgB;AACvC,QAAMC,kBAAkB,GAAGD,UAAU,CAACE,IAAX,CAAgBC,GAAhB,CAAqBlB,GAAD,IAAS;AACvD,UAAM;AAAEK,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,QAAoCP,GAAG,CAACmB,IAAJ,EAA1C;AAEA,WAAO;AACNC,MAAAA,EAAE,EAAEpB,GAAG,CAACoB,EADF;AAENf,MAAAA,WAFM;AAGNC,MAAAA,KAHM;AAINC,MAAAA,SAJM,CAKN;;AALM,KAAP;AAQA,GAX0B,CAA3B,CADuC,CAavC;;AACA,SAAOS,kBAAP;AACA,CAfM;AAiBP9B,QAAQ,CAACmC,aAAT,CAAuBlC,MAAvB;AAEA,OAAO,MAAMmC,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,eAAeb,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBv5DscSinsnOHZloc_wkvORqqJCfpdIY0\",\n    authDomain: \"oddamwdobrerece-2e8cb.firebaseapp.com\",\n    projectId: \"oddamwdobrerece-2e8cb\",\n    storageBucket: \"oddamwdobrerece-2e8cb.appspot.com\",\n    messagingSenderId: \"402538213194\",\n    appId: \"1:402538213194:web:d26e8a35876fe3ff8e1bb3\",\n    measurementId: \"G-K3772P97JK\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\tif (!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\t// const collectionRef = firestore.collection(\"users\");\n\n\tconst snapshot = await userRef.get();\n\t// const collectionSnapshot = await collectionRef.get();\n\t// console.log({ collection: collectionSnapshot.docs.map((doc) => doc.data()) });\n\n\tif (!snapshot.exists) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalData\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(\"error creating user\", error.message);\n\t\t}\n\t}\n\n\treturn userRef;\n};\n\n// pobieranie uzytkowników\n\nexport const getUsers = (collection) => {\n\tconst transformCollecion = collection.docs.map((doc) => {\n\t\tconst { displayName, email, createdAt } = doc.data();\n\n\t\treturn {\n\t\t\tid: doc.id,\n\t\t\tdisplayName,\n\t\t\temail,\n\t\t\tcreatedAt\n\t\t\t// console.log(\"\");\n\t\t};\n\n\t});\n\t// console.log(transformCollecion);\n\treturn transformCollecion;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}