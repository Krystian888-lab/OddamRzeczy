{"ast":null,"code":"var _jsxFileName = \"/home/krystian/CodersLab_JavaScript_Brudnopis/OddamRzeczyWDobreRece/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport Navigation from \"./components\";\nimport MenuLogin from \"./components/Menu/MenuLogin\";\nimport Menu from \"./components/Menu/Menu\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Logout from \"./components/Logout\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser, checkUserSession } from './redux/user/actions';\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\"; // function App() {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      // this.setState({ currentUser: user });\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          // console.log(snapShot.data());\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      }\n\n      this.setState({\n        currentUser: userAuth\n      });\n      setCurrentUser(userAuth); // addCollectionsAndDocuments(\"forms\", this.props.forms);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logowanie\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/rejestracja\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wylogowano\",\n            component: Logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapDispatch)(App);","map":{"version":3,"sources":["/home/krystian/CodersLab_JavaScript_Brudnopis/OddamRzeczyWDobreRece/src/App.js"],"names":["React","Switch","Route","BrowserRouter","Navigation","MenuLogin","Menu","Home","Login","Register","Logout","connect","setCurrentUser","checkUserSession","auth","createUserProfileDocument","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","componentWillUnmount","render","mapDispatch","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Switch, Route, BrowserRouter} from \"react-router-dom\";\nimport Navigation from \"./components\"\nimport MenuLogin from \"./components/Menu/MenuLogin\";\nimport Menu from \"./components/Menu/Menu\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Logout from \"./components/Logout\";\n\nimport { connect } from \"react-redux\";\nimport {setCurrentUser, checkUserSession} from './redux/user/actions'\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\n// function App() {\n\n  class App extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        currentUser: null\n      };\n    }\n  \n    unsubscribeFromAuth = null;\n\n    componentDidMount() {\n      const { setCurrentUser } = this.props;\n  \n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n        // this.setState({ currentUser: user });\n  \n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n  \n          userRef.onSnapshot((snapShot) => {\n            // console.log(snapShot.data());\n            this.setState({\n              currentUser: {\n                id: snapShot.id,\n                ...snapShot.data()\n              }\n            });\n            setCurrentUser({\n              currentUser: {\n                id: snapShot.id,\n                ...snapShot.data()\n              }\n            });\n          });\n        }\n  \n        this.setState({ currentUser: userAuth });\n        setCurrentUser(userAuth);\n  \n        // addCollectionsAndDocuments(\"forms\", this.props.forms);\n      });\n    }\n  \n    componentWillUnmount() {\n      this.unsubscribeFromAuth();\n    }\n\n    render() {\n  return (\n    <BrowserRouter>\n        <>\n          {/* <MenuLogin/>\n          <Menu/> */}\n          <Navigation/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/logowanie\" component={Login} />\n          <Route path=\"/rejestracja\" component={Register} />\n          <Route path=\"/wylogowano\" component={Logout} />\n          </Switch>\n        </>\n    </BrowserRouter>\n  );\n}\n  }\n\nconst mapDispatch = (dispatch) => ({\n\tsetCurrentUser: (user) => dispatch(setCurrentUser(user)),\n\tcheckUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect (\n\n\tmapDispatch )(App);"]},"metadata":{},"sourceType":"module"}