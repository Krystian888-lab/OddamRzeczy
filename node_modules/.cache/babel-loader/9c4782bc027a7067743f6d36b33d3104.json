{"ast":null,"code":"import { SET_CURRENT_USER, CHECK_USER_SESSION, GET_USERS_START, GET_USERS_SUCCESS, GET_USERS_ERROR } from \"./actionTypes\";\nimport { firestore, getUsers } from \"../../firebase/firebase.utils\";\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  payload: user\n});\n\nconst getUsersStart = () => ({\n  type: GET_USERS_START\n});\n\nconst getUsersSuccess = payload => ({\n  type: GET_USERS_SUCCESS,\n  payload\n});\n\nconst getUsersError = payload => ({\n  type: GET_USERS_ERROR,\n  payload\n});\n\nexport const getAllUsers = () => dispatch => {\n  const collectionRef = firestore.collection(\"users\");\n  dispatch(getUsersStart());\n  collectionRef.get().then(snapshot => {\n    const collectionMap = getUsers(snapshot);\n    dispatch(getUsersSuccess(collectionMap));\n  }).catch(error => dispatch(getUsersError(error.message)));\n};\nexport const checkUserSession = () => ({\n  type: CHECK_USER_SESSION\n});","map":{"version":3,"sources":["/home/krystian/CodersLab_JavaScript_Brudnopis/OddamRzeczyWDobreRece/src/redux/user/actions.js"],"names":["SET_CURRENT_USER","CHECK_USER_SESSION","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_ERROR","firestore","getUsers","setCurrentUser","user","type","payload","getUsersStart","getUsersSuccess","getUsersError","getAllUsers","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error","message","checkUserSession"],"mappings":"AAAA,SACCA,gBADD,EAECC,kBAFD,EAGCC,eAHD,EAICC,iBAJD,EAKCC,eALD,QAMO,eANP;AAQA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,+BAApC;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACxCC,EAAAA,IAAI,EAAET,gBADkC;AAExCU,EAAAA,OAAO,EAAEF;AAF+B,CAAX,CAAvB;;AAKP,MAAMG,aAAa,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEP;AAAR,CAAP,CAAtB;;AACA,MAAMU,eAAe,GAAIF,OAAD,KAAc;AAAED,EAAAA,IAAI,EAAEN,iBAAR;AAA2BO,EAAAA;AAA3B,CAAd,CAAxB;;AACA,MAAMG,aAAa,GAAIH,OAAD,KAAc;AAAED,EAAAA,IAAI,EAAEL,eAAR;AAAyBM,EAAAA;AAAzB,CAAd,CAAtB;;AAEA,OAAO,MAAMI,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC9C,QAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,OAArB,CAAtB;AACAF,EAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AAEAK,EAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGf,QAAQ,CAACc,QAAD,CAA9B;AACAL,IAAAA,QAAQ,CAACH,eAAe,CAACS,aAAD,CAAhB,CAAR;AACA,GALF,EAMEC,KANF,CAMSC,KAAD,IAAWR,QAAQ,CAACF,aAAa,CAACU,KAAK,CAACC,OAAP,CAAd,CAN3B;AAOA,CAXM;AAaP,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AAAEhB,EAAAA,IAAI,EAAER;AAAR,CAAP,CAAzB","sourcesContent":["import {\n\tSET_CURRENT_USER,\n\tCHECK_USER_SESSION,\n\tGET_USERS_START,\n\tGET_USERS_SUCCESS,\n\tGET_USERS_ERROR\n} from \"./actionTypes\";\n\nimport { firestore, getUsers } from \"../../firebase/firebase.utils\";\n\nexport const setCurrentUser = (user) => ({\n\ttype: SET_CURRENT_USER,\n\tpayload: user\n});\n\nconst getUsersStart = () => ({ type: GET_USERS_START });\nconst getUsersSuccess = (payload) => ({ type: GET_USERS_SUCCESS, payload });\nconst getUsersError = (payload) => ({ type: GET_USERS_ERROR, payload });\n\nexport const getAllUsers = () => (dispatch) => {\n\tconst collectionRef = firestore.collection(\"users\");\n\tdispatch(getUsersStart());\n\n\tcollectionRef\n\t\t.get()\n\t\t.then((snapshot) => {\n\t\t\tconst collectionMap = getUsers(snapshot);\n\t\t\tdispatch(getUsersSuccess(collectionMap));\n\t\t})\n\t\t.catch((error) => dispatch(getUsersError(error.message)));\n};\n\nexport const checkUserSession = () => ({ type: CHECK_USER_SESSION });\n"]},"metadata":{},"sourceType":"module"}