{"ast":null,"code":"var _jsxFileName = \"/home/krystian/CodersLab_JavaScript_Brudnopis/OddamRzeczyWDobreRece/src/components/WhoWeHelp/Pagination.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = (array, currentPage, setPageNumber) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(array.length / 3); i++) {\n    const element = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => setPageNumber(i),\n      className: currentPage === i ? 'active' : null,\n      tabIndex: \"0\",\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n\n    pageNumbers.push(element);\n  }\n\n  return pageNumbers;\n};\n\n_c = Pagination;\nexport default Pagination; // import React from \"react\";\n//     const Pagination = ({ postPerPage, totalPost, paginate}) => {\n//     const pageNumbers = [];\n// // count and tell how much pages we have\n//     for (let i = 1; i <= Math.ceil(totalPost/postPerPage); i++) {\n//         pageNumbers.push(i);\n//     }\n// return (\n//     <div className=\"o-row\">\n//     <ul className=\"o-col c-pagination--list\">\n//         { pageNumbers.length > 1 && pageNumbers.map(number => (\n//         <li className=\"c-pagination\" key={number}>\n//         <button className={ totalPost === i ? \"c-btn c-pagination__item c-pagination__accent e-alignCenter\" : \"c-btn c-pagination__item e-alignCenter\"} href=\"#\" onClick={() => paginate(number)}>{number}\n//         </button>\n//         </li>\n//         ))}\n//     </ul>\n//     </div>\n//     )\n// }\n// export default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/krystian/CodersLab_JavaScript_Brudnopis/OddamRzeczyWDobreRece/src/components/WhoWeHelp/Pagination.js"],"names":["React","Pagination","array","currentPage","setPageNumber","pageNumbers","i","Math","ceil","length","element","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,aAArB,KAAuC;AACtD,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUN,KAAK,CAACO,MAAN,GAAe,CAAzB,CAArB,EAAkDH,CAAC,EAAnD,EAAuD;AACvD,UAAMI,OAAO,gBACT;AAEA,MAAA,OAAO,EAAE,MAAMN,aAAa,CAACE,CAAD,CAF5B;AAGA,MAAA,SAAS,EAAEH,WAAW,KAAKG,CAAhB,GAAoB,QAApB,GAA+B,IAH1C;AAIA,MAAA,QAAQ,EAAC,GAJT;AAAA,gBAMCA;AAND,OACKA,CADL;AAAA;AAAA;AAAA;AAAA,YADJ;;AAUAD,IAAAA,WAAW,CAACM,IAAZ,CAAiBD,OAAjB;AACC;;AACD,SAAOL,WAAP;AACH,CAjBD;;KAAMJ,U;AAmBN,eAAeA,UAAf,C,CAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\n\nconst Pagination = (array, currentPage, setPageNumber) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(array.length / 3); i++) {\n    const element = (\n        <li\n        key={i}\n        onClick={() => setPageNumber(i)}\n        className={currentPage === i ? 'active' : null}\n        tabIndex=\"0\"\n        >\n        {i}\n        </li>\n    );\n    pageNumbers.push(element);\n    }\n    return pageNumbers;\n};\n\nexport default Pagination;\n\n\n// import React from \"react\";\n\n//     const Pagination = ({ postPerPage, totalPost, paginate}) => {\n\n//     const pageNumbers = [];\n\n// // count and tell how much pages we have\n//     for (let i = 1; i <= Math.ceil(totalPost/postPerPage); i++) {\n//         pageNumbers.push(i);\n//     }\n\n// return (\n\n//     <div className=\"o-row\">\n\n//     <ul className=\"o-col c-pagination--list\">\n//         { pageNumbers.length > 1 && pageNumbers.map(number => (\n        \n//         <li className=\"c-pagination\" key={number}>\n\n//         <button className={ totalPost === i ? \"c-btn c-pagination__item c-pagination__accent e-alignCenter\" : \"c-btn c-pagination__item e-alignCenter\"} href=\"#\" onClick={() => paginate(number)}>{number}\n//         </button>\n\n//         </li>\n\n//         ))}\n//     </ul>\n//     </div>\n    \n//     )\n// }\n// export default Pagination;"]},"metadata":{},"sourceType":"module"}